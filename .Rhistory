1+1
1+1
a
a<-1
a
b
a<-1
b<-2
a+b
#오칙연산
vec01<-c(1,2,3,7) #3오브젝트
vec01
vec02<-c(1:5)
vec02
vec4<-1:5
vec4<-1:5
vec04<-1:5
vec04
calss
class
vec06<-("안", "녕")
vec06<-("안" "녕")
vec06<-("안", "녕")
vec06<-("안", "녕")
vec06<-1:3
mean(vec06)
class(vec06)
max(vec06)
vec06<-("안", "녕")
vec06<-c("안", "녕")
##5+7 더하기 로직을 구하시오
x<-5
y<-7
x+y
x+y
x<-5
y<-7
x+y
x<-5
y<-7
##5+7 더하기 로직을 식가지 보이도록 구하시오
op <- "+"
eq <- "="
cat(x,op,y,eq,x+y)
plus <- funtion(x,y){return(x+y)}#객체지향 모든 결과를 만들어내는 식을 만들어 써라 {} return결과를 돌려주어라 함수는 반드시 결과값이 있다. 그래서 만름funtion(){return()}
x <- 5
y <- 7
x+y
plus <- funtion(x,y){return(x+y)}#객체지향 모든 결과를 만들어내는 식을 만들어 써라 {} return결과를 돌려주어라 함수는 반드시 결과값이 있다. 그래서 만름funtion(){return()}
plus(3,4)
plus <- funtion(x,y){return(x+y)}#객체지향 모든 결과를 만들어내는 식을 만들어 써라 {} return결과를 돌려주어라 함수는 반드시 결과값이 있다. 그래서 만름funtion(){return()}
plus(3,4)
plus <- function(x,y){return(x+y)}#객체지향 모든 결과를 만들어내는 식을 만들어 써라 {} return결과를 돌려주어라 함수는 반드시 결과값이 있다. 그래서 만름funtion(){return()}
plus(3,4)
plus <- function(x,y){return(x-y)}
plus(2,1)
plus <- function(x,y){return(x/y)}
plus(2,1)
plus <- function(x,y){return(x*y)}
plus(2,1)
plus <- function(x,y){return(x/y)}
plus(4,2)
plus <- function(x,y){return(x%/%y)}
plus(4,2)
plus <- function(x,y){return(x%%y)}
plus(4,2)
op <- "+"
if(op="+")print("plus")else#사용자가 +누르면 더하고 -누르면 빼도록 하기 위해합 print는 하나만 보여주어라
if(op="-")print("minus")else
if(op="*")print("multi")else
if(op="/")print("divid")else
if(op="%")print("remainder")
print("error")
op <- "+"
if(op="+")print("plus")else#사용자가 +누르면 더하고 -누르면 빼도록 하기 위해합 print는 하나만 보여주어라
if(op="-")print("minus")else
if(op="*")print("multi")else
if(op="/")print("divid")else
if(op="%")print("remainder")
print("error")
cat(  #결과값출력하다
x,
op,
y,
"=",
swith(
op,
"+"= tostring(x+y),#tostring문자열로 바꾸라
"-"= tostring(x-y),
"*"= tostring(x*y),
"/"= tostring(x%/%y),
"%"= tstring(x%%y)
))
cat(  #결과값출력하다
x,
op,
y,
"=",
switch(
op,
"+"= tostring(x+y),#tostring문자열로 바꾸라
"-"= tostring(x-y),
"*"= tostring(x*y),
"/"= tostring(x%/%y),
"%"= tstring(x%%y)
))
cat(  #결과값출력하다
x,
op,
y,
"=",
switch(
op,
"+"= tostring(x+y),#tostring문자열로 바꾸라
"-"= tostring(x-y),
"*"= tostring(x*y),
"/"= tostring(x%/%y),
"%"= tostring(x%%y)
))
cat(  #결과값출력하다
x,
op,
y,
"=",
switch(
op,
'+'= tostring(x+y),#tostring문자열로 바꾸라
'-'= tostring(x-y),
'*'= tostring(x*y),
'/'= tostring(x%/%y),
'%'= tostring(x%%y)
)
)
cat(  #결과값출력하다
x,
op,
y,
"=",
switch(
op,
'+'= toString(x+y),#tostring문자열로 바꾸라
'-'= toString(x-y),
'*'= toString(x*y),
'/'= toString(x%/%y),
'%'= toString(x%%y)
)
)
op <- "+"
x <- 6
y <- 3
if(op=="+")print(x + y) else
if(op=="-")print(x - y) else
if(op=="*")print(x * y) else
if(op=="/")print(x %/% y) else
if(op=="%")print(x %% y) else
print("error")
x <- 20
op <- "+"
y <- 3
switch(
op,
"+"=cat(x,"op",y,"=", x+y),
"-"=cat(x,"op",y,"=", x-y),
"*"=cat(x,"op",y,"=", x*y),
"/"=cat(x,"op",y,"=", x%/%y),
"%"=cat(x,"op",y,"=", x%%y),
"error"
)
x <- 20
op <- "+"
y <- 3
switch(
op,
"+"=cat(x,op,y,"=", x+y),
"-"=cat(x,op,y,"=", x-y),
"*"=cat(x,"op",y,"=", x*y),
"/"=cat(x,"op",y,"=", x%/%y),
"%"=cat(x,"op",y,"=", x%%y),
"error"
)
x <- 20
op <- "+"
y <- 3
switch(
op,
"+"=cat(x,op,y,"=", x+y),
"-"=cat(x,op,y,"=", x-y),
"*"=cat(x,op,y,"=", x*y),
"/"=cat(x,op,y,"=", x%/%y),
"%"=cat(x,op,y,"=", x%%y),
"error"
)
calc <- function(x,op,y){
res<-if(op=="+")print(x + y) else
if(op=="-")print(x - y) else
if(op=="*")print(x * y) else
if(op=="/")print(x %/% y) else
if(op=="%")print(x %% y) else
cat("error")
return(res)
}
calc(4,"-",2)
calc <- function(x,op,y){
res<-if(op=="+")cat(x,"op",y,"=", x+y)else
if(op=="-")cat(x,"op",y,"=", x-y)else
if(op=="*")cat(x,"op",y,"=", x*y)else
if(op=="/")cat(x,"op",y,"=", x/y)else
if(op=="%")cat(x,"op",y,"=", x%y)else
cat("error")
return(res)
}
calc(4,"-",2)
op <- "+"
switch(
op,
"+"=cat(x,op,y,"=", x+y),
"-"=cat(x,op,y,"=", x-y),
"*"=cat(x,op,y,"=", x*y),
"/"=cat(x,op,y,"=", x%/%y),
"%"=cat(x,op,y,"=", x%%y),
"error"
)
calc <- function(x,op,y){
res<-"+"=cat(x,op,y,"=", x+y),
"-"=cat(x,op,y,"=", x-y),
"*"=cat(x,op,y,"=", x*y),
"/"=cat(x,op,y,"=", x%/%y),
"%"=cat(x,op,y,"=", x%%y),
"error"
return(res)
}
calc(4,"-",2)
calc <- function(x,op,y){
res<-switch(
op,
"+"=x+y,
"-"=x-y,
"*"=x*y,
"/"=x%/%y,
"%"=x%%y,
"error"
)
return (cat(x,op,y,"=",res))#결과값은 하나
}
calc <- function(x,op,y){
res<-switch(
op,
"+"=x+y,
"-"=x-y,
"*"=x*y,
"/"=x%/%y,
"%"=x%%y,
"error"
)
return (cat(x,op,y,"=",res))#결과값은 하나
}
calc(1,"+",2)
kor <- 80
eng <- 80
math <- 80
sum <- kor+eng+math
kor <- 80
eng <- 80
math <- 80
sum <- kor+eng+math
avg <- sum/3
kor <- 80
eng <- 80
math <- 80
sum <- kor+eng+math
kor <- 80
eng <- 80
math <- 80
sum <- kor+eng+math
kor <- 80
eng <- 80
math <- 80
sum <- kor+eng+math
sum <- kor+eng+math
sum
kor
grade <- function(kor, eng, math){
sum <- kor+eng+math
avg <- sum/3
return (cat("총점:",sum,"  평균:",avg))
}
grade(80,90,70)
grade(80,90,60)
kor <- 80
eng <- 80
math <- 80
sum <- kor+eng+math
sum
avg <- sum/3
avg
kor <- 80
eng <- 80
math <- 80
sum <- kor+eng+math
sum
avg <- sum/3
avg
grade <- function(kor, eng, math){
return(cat("총점:",sum, "평균:",avg))
}
grade(80,90,60)
grade(80,90,60)
grade(180,90,60)
grade(180,910,60)
grade(180,90,60)
grade(180,90,60)
kor <- 80
eng <- 80
math <- 80
sum <- kor+eng+math
sum
avg <- sum/3
avg
grade <- function(kor, eng, math){
return(cat("총점:",sum, "평균:",avg))
}
grade(180,910,60)
grade(180,910,60)
kor <- 80
eng <- 80
math <- 80
sum <- kor+eng+math
sum
avg <- sum/3
avg
grade <- function(kor, eng, math){
sum <- kor+eng+math
avg <- sum/3
return(cat("총점:",sum, "평균:",avg))
}
grade(180,910,60)
grade(180,910,60)
grade(1810,910,60)
0
